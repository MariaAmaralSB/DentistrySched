// <auto-generated />
using System;
using DentistrySched.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DentistrySched.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("DentistrySched.Domain.AgendaRegra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DentistaId")
                        .HasColumnType("TEXT");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("FimManha")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("FimTarde")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("InicioManha")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("InicioTarde")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AgendaRegras");
                });

            modelBuilder.Entity("DentistrySched.Domain.Consulta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DentistaId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PacienteId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProcedimentoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DentistaId", "Inicio", "Fim")
                        .IsUnique();

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("DentistrySched.Domain.Dentista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CRO")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Dentistas");
                });

            modelBuilder.Entity("DentistrySched.Domain.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CelularWhatsApp")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ConsentimentoWhatsApp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("DentistrySched.Domain.Procedimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BufferMin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DuracaoMin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Procedimentos");
                });

            modelBuilder.Entity("DentistrySched.Domain.Consulta", b =>
                {
                    b.OwnsOne("DentistrySched.Domain.PreTriagem", "PreTriagem", b1 =>
                        {
                            b1.Property<Guid>("ConsultaId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Descricao")
                                .HasColumnType("TEXT");

                            b1.PrimitiveCollection<string>("Sintomas")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ConsultaId");

                            b1.ToTable("Consultas");

                            b1.WithOwner()
                                .HasForeignKey("ConsultaId");
                        });

                    b.Navigation("PreTriagem");
                });
#pragma warning restore 612, 618
        }
    }
}
